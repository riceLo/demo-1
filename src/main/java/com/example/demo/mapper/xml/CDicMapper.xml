<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.CDicMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.CDic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tablename" jdbcType="VARCHAR" property="tablename" />
    <result column="fieldname" jdbcType="VARCHAR" property="fieldname" />
    <result column="value" jdbcType="TINYINT" property="value" />
    <result column="des" jdbcType="VARCHAR" property="des" />
  </resultMap>
  
  <resultMap id="VDicMap" type="com.example.demo.entity.VDic">
  	<result column="value" jdbcType="TINYINT" property="value" />
    <result column="des" jdbcType="VARCHAR" property="des" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tablename, fieldname, value, des
  </sql>
  
  <select id="selectVDic" resultMap="VDicMap">
  	select value,des from c_dic where tablename=upper(#{arg0}) and fieldname=upper(#{arg1})
  </select>
  
  <!-- 
  <select id="selectDes"  resultType="String">
  	select des from c_dic where tablename='CONSTRACT' and fieldname='CLIENT' and value =#{client}
  </select>
   -->
  
  <select id="selectByExample" parameterType="com.example.demo.entity.CDicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_dic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from c_dic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from c_dic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.CDicExample">
    delete from c_dic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.CDic">
    insert into c_dic (id, tablename, fieldname, 
      value, des)
    values (#{id,jdbcType=INTEGER}, #{tablename,jdbcType=VARCHAR}, #{fieldname,jdbcType=VARCHAR}, 
      #{value,jdbcType=TINYINT}, #{des,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.CDic">
    insert into c_dic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tablename != null">
        tablename,
      </if>
      <if test="fieldname != null">
        fieldname,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="des != null">
        des,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tablename != null">
        #{tablename,jdbcType=VARCHAR},
      </if>
      <if test="fieldname != null">
        #{fieldname,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=TINYINT},
      </if>
      <if test="des != null">
        #{des,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.CDicExample" resultType="java.lang.Long">
    select count(*) from c_dic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update c_dic
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tablename != null">
        tablename = #{record.tablename,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldname != null">
        fieldname = #{record.fieldname,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=TINYINT},
      </if>
      <if test="record.des != null">
        des = #{record.des,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update c_dic
    set id = #{record.id,jdbcType=INTEGER},
      tablename = #{record.tablename,jdbcType=VARCHAR},
      fieldname = #{record.fieldname,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=TINYINT},
      des = #{record.des,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.CDic">
    update c_dic
    <set>
      <if test="tablename != null">
        tablename = #{tablename,jdbcType=VARCHAR},
      </if>
      <if test="fieldname != null">
        fieldname = #{fieldname,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=TINYINT},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.CDic">
    update c_dic
    set tablename = #{tablename,jdbcType=VARCHAR},
      fieldname = #{fieldname,jdbcType=VARCHAR},
      value = #{value,jdbcType=TINYINT},
      des = #{des,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>